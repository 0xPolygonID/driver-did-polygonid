{
	"info": {
		"_postman_id": "66969038-52a0-4b80-b835-75ad1ce654a8",
		"name": "Nameservice users e2e tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Resolve state by NOT published genesis state",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							"",
							"pm.test(\"Did doc not found\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.didDocument.verificationMethod[0].published).to.eq(false)",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/1.0/identifiers/did:polygonid:polygon:amoy:2qR3ufJ84dtdHp4hokxH9tG3E3SzLdyBcjdmEz6NH1?state=bc4c42a731152f7c76c5616b59d82fb413d77781d26cb52967e837de85788416",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"1.0",
						"identifiers",
						"did:polygonid:polygon:amoy:2qR3ufJ84dtdHp4hokxH9tG3E3SzLdyBcjdmEz6NH1"
					],
					"query": [
						{
							"key": "state",
							"value": "bc4c42a731152f7c76c5616b59d82fb413d77781d26cb52967e837de85788416"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Resolve NOT published did",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							"",
							"pm.test(\"Did doc not found\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.didDocument.verificationMethod[0].published).to.eq(false)",
							"  pm.expect(responseJson.didDocument.verificationMethod[0].global).not.empty;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/1.0/identifiers/did:polygonid:polygon:amoy:2qR3ufJ84dtdHp4hokxH9tG3E3SzLdyBcjdmEz6NH1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"1.0",
						"identifiers",
						"did:polygonid:polygon:amoy:2qR3ufJ84dtdHp4hokxH9tG3E3SzLdyBcjdmEz6NH1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Resolve state by gist for not published Issuer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/1.0/identifiers/did:polygonid:polygon:amoy:2qR3ufJ84dtdHp4hokxH9tG3E3SzLdyBcjdmEz6NH1?gist=e1421e1e9bb8d06dd1d8b190091adab9ff34ab99b5711b5941c5a80b412cc40e",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"1.0",
						"identifiers",
						"did:polygonid:polygon:amoy:2qR3ufJ84dtdHp4hokxH9tG3E3SzLdyBcjdmEz6NH1"
					],
					"query": [
						{
							"key": "gist",
							"value": "e1421e1e9bb8d06dd1d8b190091adab9ff34ab99b5711b5941c5a80b412cc40e"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Resolve published did",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							"",
							"pm.test(\"Did doc not found\", () => {",
							"    const responseJson = pm.response.json();",
							"",
							"    pm.expect(responseJson.didDocument.verificationMethod[0].published).to.eq(true)",
							"    pm.expect(responseJson.didDocument.verificationMethod[0].info).not.empty;",
							"    pm.expect(responseJson.didDocument.verificationMethod[0].global).not.empty;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/1.0/identifiers/did:polygonid:polygon:amoy:2qY71pSkdCsRetTHbUA4YqG7Hx63Ej2PeiJMzAdJ2V",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"1.0",
						"identifiers",
						"did:polygonid:polygon:amoy:2qY71pSkdCsRetTHbUA4YqG7Hx63Ej2PeiJMzAdJ2V"
					]
				}
			},
			"response": []
		},
		{
			"name": "Resolve state by state",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							"",
							"pm.test(\"Did doc not found\", () => {",
							"    const responseJson = pm.response.json();",
							"    ",
							"    pm.expect(responseJson.didDocument.verificationMethod[0].published).to.eq(true)",
							"    pm.expect(responseJson.didDocument.verificationMethod[0].info).not.empty;",
							"    pm.expect(responseJson.didDocument.verificationMethod[0].global).to.equal(undefined);",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/1.0/identifiers/did:polygonid:polygon:amoy:2qY71pSkdCsRetTHbUA4YqG7Hx63Ej2PeiJMzAdJ2V?state=9a73b7f0f5f0a9b5e2dab8bdcecf4fa003ef531c1c61307c79483d51f5474c1e",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"1.0",
						"identifiers",
						"did:polygonid:polygon:amoy:2qY71pSkdCsRetTHbUA4YqG7Hx63Ej2PeiJMzAdJ2V"
					],
					"query": [
						{
							"key": "state",
							"value": "9a73b7f0f5f0a9b5e2dab8bdcecf4fa003ef531c1c61307c79483d51f5474c1e"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Resolve state by gist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							"",
							"pm.test(\"Did doc not found\", () => {",
							"    const responseJson = pm.response.json();",
							"",
							"    pm.expect(responseJson.didDocument.verificationMethod[0].published).to.eq(true)",
							"    pm.expect(responseJson.didDocument.verificationMethod[0].info).not.empty;",
							"    pm.expect(responseJson.didDocument.verificationMethod[0].global).not.empty;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/1.0/identifiers/did:polygonid:polygon:amoy:2qY71pSkdCsRetTHbUA4YqG7Hx63Ej2PeiJMzAdJ2V?gist=b34ff91e0a244db80ad516a1affa537ad0af62fe3ffc8255ecf1db446b17e917",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"1.0",
						"identifiers",
						"did:polygonid:polygon:amoy:2qY71pSkdCsRetTHbUA4YqG7Hx63Ej2PeiJMzAdJ2V"
					],
					"query": [
						{
							"key": "gist",
							"value": "b34ff91e0a244db80ad516a1affa537ad0af62fe3ffc8255ecf1db446b17e917"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Resolve state by issuer genesis state",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							"",
							"pm.test(\"Did doc not found\", () => {",
							"const responseJson = pm.response.json();",
							"    pm.expect(responseJson.didDocument.verificationMethod[0].published).to.eq(true)",
							"    pm.expect(responseJson.didDocument.verificationMethod[0].info).not.empty;",
							"    pm.expect(responseJson.didDocument.verificationMethod[0].global).to.eq(undefined);",
							"",
							"    // check that genesis state was replaced",
							"    pm.expect(responseJson.didDocument.verificationMethod[0].info.replacedAtTimestamp).not.empty",
							"    pm.expect(responseJson.didDocument.verificationMethod[0].info.replacedAtBlock).not.empty",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/1.0/identifiers/did:polygonid:polygon:amoy:2qY71pSkdCsRetTHbUA4YqG7Hx63Ej2PeiJMzAdJ2V?state=21c89984e3b08f735f1da0443b0aa4afe92c400c1d33dfb6867662360328fd0d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"1.0",
						"identifiers",
						"did:polygonid:polygon:amoy:2qY71pSkdCsRetTHbUA4YqG7Hx63Ej2PeiJMzAdJ2V"
					],
					"query": [
						{
							"key": "state",
							"value": "21c89984e3b08f735f1da0443b0aa4afe92c400c1d33dfb6867662360328fd0d"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "latest_gist",
			"value": ""
		},
		{
			"key": "latest_issuer_state",
			"value": ""
		},
		{
			"key": "latest_gist_root",
			"value": ""
		}
	]
}
